#~
	Copyright reserved Yiyi Wang 
	Please follow MIT license

	This file mainly deals with:
		token
		string
		token_list

~#
# true -> true false -> false
if typeof(exports) == "undefined" then
    exports=[]
end
INCOMPLETE_STATEMENT=false
#= FILE: walley_string.wy
def toString(input_str) then
    if input_str[0]=="\"" then
        return input_str
    else
        return "\""+input_str+"\""
    end
end
def Walley_Print_Error(input_str,error_message,error_start_index) then
    console.log("Error.. %s\n",error_message)
    console.log("%s\n",input_str)
    local empty=""
    local i=0
    for  i<error_start_index, i=i+1 then
        empty=empty+" " 
    end
    empty=empty+"^"
    console.log("%s\n",empty)  
end
#= FILE: walley_data.wy
# Attenttion:
#   Token_List is just []
#token class


def Token_init() then
    local Token=[]
    Token.TOKEN_CLASS=""
    Token.TOKEN_STRING=""
    Token.TOKEN_START=-1
    Token.TOKEN_END=-1
    return Token    
end

#print token
TOKEN_print=def(token)then
	console.log(token.TOKEN_CLASS+":"+"|"+token.TOKEN_STRING+"|"+token.TOKEN_START+"|"+token.TOKEN_END)
end

#token list
# I remove token_list and its related functions
# Token_List now is just []
# convert token list to string

TL_toString=def(tl)then
	local return_string=""
	for i,v in tl then
		return_string=return_string+v.TOKEN_STRING
	end
end

TL_addToken=def(tl,add_token) then
	local temp_token=Token_init()
	temp_token.TOKEN_CLASS=add_token.TOKEN_CLASS
	temp_token.TOKEN_STRING=add_token.TOKEN_STRING
	temp_token.TOKEN_START=add_token.TOKEN_START
	temp_token.TOKEN_END=add_token.TOKEN_END
	tl.append(temp_token)
end

TL_indexOfTokenThatHasTokenString=def(tl, token_string) then
    local output=-1
    local i=0
    for i=0,i<len(tl),i=i+1 then
        if tl[i].TOKEN_STRING==token_string then
            return i
        end
    end
    return -1
end

def TL_indexOfTokenThatHasTokenClass(tl, token_string) then
    local output=-1
    local i=0
    for i=0,i<len(tl),i=i+1 then
        if tl[i].TOKEN_CLASS==token_string then
            return i
        end
    end
    return -1
end