
#~
    Copyright reserved Yiyi Wang 
    Please follow MIT license

    This file mainly deals with:
        Integrate all code
~#

import "walley_cg.wy"

# return string type of output
exports.Code_Generation=def(input_str) then
    INCOMPLETE_STATEMENT=false
    local tl=Walley_Lexical_Analyzie(input_str)
    local tree=parser(tl)
    local sl=[]
    local output=Code_Generation_2_Javascript(sl,tree)

    if output!="" then
        sl.append(output)
    end


    local output_str=""
    local  length=len(sl)
    for i=0,i<length,i=i+1 then
        output_str=output_str+sl[i]
    end

    exports.INCOMPLETE_STATEMENT=INCOMPLETE_STATEMENT
    
    return output_str
end

#~
tl=Walley_Lexical_Analyzie("for i<10,i+=1 then i=12 end")
tree=parser(tl)
TREE_print(tree)
sl=[]
output_str=Code_Generation_2_Javascript(sl,tree)
console.log(sl)
console.log(output_str)
~#





